//------------------------------------------------------------------
//-- File generated by RobustVerilog parser
//-- RobustVerilog version 1.2 (limited free version)
//-- Invoked Sun Mar 24 15:39:37 2019
//-- Source file: axi_slave.v
//-- Parent file: None
//-- Run directory: E:/vlsi/axi_slave/run/
//-- Target directory: out/
//-- Command flags: ../src/base/axi_slave.v -od out -I ../src/gen -list list.txt -listpath -header -gui 
//-- www.provartec.com/edatools ... info@provartec.com
//------------------------------------------------------------------





  
module axi_slave(clk,reset,AWID,AWADDR,AWLEN,AWSIZE,AWBURST,AWCACHE,AWPROT,AWLOCK,AWVALID,AWREADY,WID,WDATA,WSTRB,WLAST,WVALID,WREADY,BID,BRESP,BVALID,BREADY,ARID,ARADDR,ARLEN,ARSIZE,ARBURST,ARCACHE,ARPROT,ARLOCK,ARVALID,ARREADY,RID,RDATA,RRESP,RLAST,RVALID,RREADY);
   
   parameter                  SLAVE_NUM = 0;
   
   input               clk;
   input               reset;
   
   input [3:0]                AWID;
   input [31:0]               AWADDR;
   input [3:0]                AWLEN;
   input [1:0]                AWSIZE;
   input [1:0]                AWBURST;
   input [3:0]                AWCACHE;
   input [2:0]                AWPROT;
   input [1:0]                AWLOCK;
   input                      AWVALID;
   output                     AWREADY;
   input [3:0]                WID;
   input [63:0]               WDATA;
   input [64/8-1:0]           WSTRB;
   input                      WLAST;
   input                      WVALID;
   output                     WREADY;
   output [3:0]               BID;
   output [1:0]               BRESP;
   output                     BVALID;
   input                      BREADY;
   input [3:0]                ARID;
   input [31:0]               ARADDR;
   input [3:0]                ARLEN;
   input [1:0]                ARSIZE;
   input [1:0]                ARBURST;
   input [3:0]                ARCACHE;
   input [2:0]                ARPROT;
   input [1:0]                ARLOCK;
   input                      ARVALID;
   output                     ARREADY;
   output [3:0]               RID;
   output [63:0]              RDATA;
   output [1:0]               RRESP;
   output                     RLAST;
   output                     RVALID;
   input                      RREADY;


   
   wire                       WR;
   wire                       RD;
   wire [31:0]                ADDR_WR;
   wire [31:0]                ADDR_RD;
   wire [63:0]                DIN;
   wire [64/8-1:0]            BSEL;
   wire [63:0]                DOUT;
   

   
     axi_slave_ram axi_slave_ram(
               .clk(clk),
               .reset(reset),
                           .AWID(AWID),
                           .AWADDR(AWADDR),
                           .AWLEN(AWLEN),
                           .AWSIZE(AWSIZE),
                           .AWBURST(AWBURST),
                           .AWCACHE(AWCACHE),
                           .AWPROT(AWPROT),
                           .AWLOCK(AWLOCK),
                           .AWVALID(AWVALID),
                           .AWREADY(AWREADY),
                           .WID(WID),
                           .WDATA(WDATA),
                           .WSTRB(WSTRB),
                           .WLAST(WLAST),
                           .WVALID(WVALID),
                           .WREADY(WREADY),
                           .BID(BID),
                           .BRESP(BRESP),
                           .BVALID(BVALID),
                           .BREADY(BREADY),
                           .ARID(ARID),
                           .ARADDR(ARADDR),
                           .ARLEN(ARLEN),
                           .ARSIZE(ARSIZE),
                           .ARBURST(ARBURST),
                           .ARCACHE(ARCACHE),
                           .ARPROT(ARPROT),
                           .ARLOCK(ARLOCK),
                           .ARVALID(ARVALID),
                           .ARREADY(ARREADY),
                           .RID(RID),
                           .RDATA(RDATA),
                           .RRESP(RRESP),
                           .RLAST(RLAST),
                           .RVALID(RVALID),
                           .RREADY(RREADY),
                           .WR(WR),
                           .RD(RD),
                           .ADDR_WR(ADDR_WR),
                           .ADDR_RD(ADDR_RD),
                           .DIN(DIN),
                           .BSEL(BSEL),
                           .DOUT(DOUT)
                           );
   
   
   axi_slave_mem axi_slave_mem(
             .clk(clk),
             .reset(reset),
                         .WR(WR),
                         .RD(RD),
                         .ADDR_WR(ADDR_WR),
                         .ADDR_RD(ADDR_RD),
                         .DIN(DIN),
                         .BSEL(BSEL),
                         .DOUT(DOUT)
             );


   
   
endmodule




